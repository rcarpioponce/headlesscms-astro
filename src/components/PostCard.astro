---
import { type WpPost, getFeatured, buildResponsiveFromWp, getAuthor } from '../lib/wp';
import { calculateReadingTime } from '../utils/readingTime';
import ReadingTime from './ReadingTime.astro';

interface Props {
  post: WpPost;
}

const { post } = Astro.props;
const fm = getFeatured(post._embedded?.['wp:featuredmedia']);
const author = getAuthor(post._embedded?.author);
const img = buildResponsiveFromWp(fm, {
  maxWidth: 1200,
  sizes: '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 420px'
});

// Calcular tiempo de lectura usando excerpt + content si est√° disponible
const contentForReading = post.content?.rendered || post.excerpt.rendered;
const readingTime = calculateReadingTime(contentForReading);
---

<li class="post-card">
  <a href={`/blog/${post.slug}/`} class="post-link">
    {img && (
      <picture>
        <source srcset={img.webpSrcset} sizes={img.sizes} type="image/webp" />
        <img
          src={img.src}
          srcset={img.srcset}
          sizes={img.sizes}
          alt={img.alt}
          loading="lazy"
          decoding="async"
          width={img.width}
          height={img.height}
        />
      </picture>
    )}
    <div class="post-content">
      <h2 class="post-title" set:html={post.title.rendered} />
      <div class="post-meta">
        <time class="post-date" datetime={post.date}>
          {new Date(post.date).toLocaleDateString('es-ES', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </time>
        <ReadingTime readingTime={readingTime} className="small" />
        {author && (
          <div class="post-author">
            Por <strong>{author.name}</strong>
          </div>
        )}
      </div>
    </div>
  </a>
</li>
