name: Deploy to cPanel

on:
  # Trigger manual
  workflow_dispatch:
  
  # Trigger por webhook desde WordPress
  repository_dispatch:
    types: [wordpress-post-published]
  
  # Trigger autom√°tico por push/merge a main
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'astro.config.mjs'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.env.example'
  
  # Trigger por Pull Request merge a main
  pull_request:
    branches: [ main ]
    types: [closed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Solo ejecutar si:
    # 1. Es workflow_dispatch (manual)
    # 2. Es repository_dispatch (WordPress webhook)
    # 3. Es push a main
    # 4. Es PR cerrado Y fue merged
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'repository_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: üìã Deployment Info
      run: |
        echo "üöÄ Deployment triggered by: ${{ github.event_name }}"
        case "${{ github.event_name }}" in
          "workflow_dispatch")
            echo "üìù Manual deployment triggered by: ${{ github.actor }}"
            ;;
          "repository_dispatch")
            echo "üìù WordPress webhook triggered deployment"
            echo "üì∞ Post: ${{ github.event.client_payload.post_title || 'Unknown' }}"
            ;;
          "push")
            echo "üìù Code push to main branch"
            echo "üìã Last commit: ${{ github.event.head_commit.message }}"
            echo "üë§ Author: ${{ github.event.head_commit.author.name }}"
            ;;
          "pull_request")
            echo "üìù Pull Request merged to main"
            echo "üìã PR: ${{ github.event.pull_request.title }}"
            echo "üë§ Author: ${{ github.event.pull_request.user.login }}"
            ;;
        esac
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      
    - name: üîç Debug - List files
      run: |
        echo "üìÅ Root directory contents:"
        ls -la
        echo "üì¶ Package files:"
        ls -la package*.json pnpm-lock.yaml 2>/dev/null || echo "Some package files missing"
      
    - name: üì¶ Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.14.0
        
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: üì• Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: üîß Build Astro site
      run: pnpm run build
      env:
        PUBLIC_CMS_URL: ${{ secrets.PUBLIC_CMS_URL }}
        
    - name: üóÇÔ∏è List dist directory (debug)
      run: ls -la dist/
      
    - name: üîê Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.CPANEL_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/deploy_key
        
    - name: üì§ Deploy to cPanel via rsync
      run: |
        # Agregar host a known_hosts con puerto espec√≠fico
        ssh-keyscan -p 53667 -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
        
        # Test SSH connection first con puerto espec√≠fico
        echo "üîç Testing SSH connection on port 53667..."
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 -p 53667 \
          ${{ secrets.CPANEL_USER }}@${{ secrets.CPANEL_HOST }} "pwd && ls -la" || echo "SSH test failed"
        
        # Sync files con rsync usando puerto espec√≠fico
        echo "üì§ Starting rsync with custom SSH port..."
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p 53667 -v" \
          --exclude='.htaccess' \
          --exclude='cgi-bin/' \
          --exclude='error_log' \
          --exclude='wp-admin/' \
          --exclude='wp-content/' \
          --exclude='wp-includes/' \
          dist/ ${{ secrets.CPANEL_USER }}@${{ secrets.CPANEL_HOST }}:${{ secrets.CPANEL_PATH }}
          
    - name: ‚úÖ Deployment complete
      run: |
        echo "üöÄ Deployment successful!"
        echo "üåê Site should be live at: https://${{ secrets.CPANEL_HOST }}"
